// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Masjid {
  id          Int          @id @default(autoincrement())
  name        String
  location    String
  theme       String
  contactInfo String
  prayerTimes PrayerTime[]
  events      Event[]
}

model PrayerTime {
  id          Int      @id @default(autoincrement())
  masjidId    Int
  date        DateTime
  fajrTime    DateTime
  dhuhrTime   DateTime
  asrTime     DateTime
  maghribTime DateTime
  ishaTime    DateTime
  masjid      Masjid   @relation(fields: [masjidId], references: [id])
}

model Event {
  id          Int      @id @default(autoincrement())
  masjidId    Int
  eventName   String
  eventDate   DateTime
  description String
  masjid      Masjid   @relation(fields: [masjidId], references: [id])
}

model Payment {
  id            Int      @id @default(autoincrement())
  userId        Int
  amount        Float
  paymentMethod String
  status        String
  createdAt     DateTime @default(now())
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]
  admin         Boolean

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
